---
- name: deploy dockerized app
  hosts: remote_server
  become: true

  tasks:
    - name: install necessary packages
      ansible.builtin.apt:
        name:
          - docker.io
        state: present
        update_cache: yes
    
    # - name: create necessary directories
    #   ansible.builtin.file:
    #     path: "{{ item }}"
    #     state: directory
    #     mode: '0755'
    #   with_items:
    #     - /var/www/html/nginx
    #     - /var/www/html/php
    #     - /etc/nginx/conf.d

    - name: distribute app files
      ansible.builtin.copy:
        dest: "{{ item.dest }}"
        src: "{{ item.src }}"
        owner: "{{ ansible_env.USER }}"
        mode: '0755'
      with_items:
        - { src: './app/nginx/default.conf', dest: '/var/www/html/nginx/default.conf' }
        - { src: './app/php/index.php', dest: '/var/www/html/php/index.php' }
        - { src: './app/db-load-script.sql', dest: '/var/www/html/db-load-script.sql' }
        - { src: './app/docker-compose.yml', dest: '/var/www/html/docker-compose.yml' }
    
    - name: start app using Docker Compose
      ansible.builtin.command:
        cmd: docker-compose up -d
        chdir: /var/www/html

  handlers:
    - name: restart nginx
      ansible.builtin.command:
        cmd: docker exec nginx nginx -s reload